; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --split_sections --debug -c -S -o..\output\stm32f4xx_ll_fmc.s --depend=..\output\stm32f4xx_ll_fmc.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\Libraries\STM32F4xx_HAL_Driver\Inc -I..\User -I..\User\usart -I..\User\led -I..\User\flash -I.\RTE\_USART -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=524 -DSTM32F429xx -DUSE_HAL_DRIVER -DSTM32F429xx -DUSE_STM32F429I_DISCO --omf_browse=..\output\stm32f4xx_ll_fmc.crf ..\Libraries\STM32F4xx_HAL_Driver\Src\stm32f4xx_ll_fmc.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.FMC_NAND_AttributeSpace_Timing_Init||, CODE, READONLY, ALIGN=1

FMC_NAND_AttributeSpace_Timing_Init PROC
        PUSH     {r4,r5,lr}
        MOV      r3,r0
        MOVS     r4,#0
        CMP      r2,#0x10
        BNE      |L0.14|
        LDR      r4,[r3,#0xc]
        B        |L0.16|
|L0.14|
        LDR      r4,[r3,#0x2c]
|L0.16|
        MOVS     r4,#0
        LDRD     r0,r5,[r1,#0]
        ORR      r0,r0,r5,LSL #8
        LDRH     r5,[r1,#8]
        ORR      r0,r0,r5,LSL #16
        LDRB     r5,[r1,#0xc]
        ORR      r0,r0,r5,LSL #24
        ORRS     r4,r4,r0
        CMP      r2,#0x10
        BNE      |L0.48|
        STR      r4,[r3,#0xc]
        B        |L0.50|
|L0.48|
        STR      r4,[r3,#0x2c]
|L0.50|
        MOVS     r0,#0
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.FMC_NAND_CommonSpace_Timing_Init||, CODE, READONLY, ALIGN=1

FMC_NAND_CommonSpace_Timing_Init PROC
        PUSH     {r4,r5,lr}
        MOV      r3,r0
        MOVS     r4,#0
        CMP      r2,#0x10
        BNE      |L1.14|
        LDR      r4,[r3,#8]
        B        |L1.16|
|L1.14|
        LDR      r4,[r3,#0x28]
|L1.16|
        MOVS     r4,#0
        LDRD     r0,r5,[r1,#0]
        ORR      r0,r0,r5,LSL #8
        LDRH     r5,[r1,#8]
        ORR      r0,r0,r5,LSL #16
        LDRB     r5,[r1,#0xc]
        ORR      r0,r0,r5,LSL #24
        ORRS     r4,r4,r0
        CMP      r2,#0x10
        BNE      |L1.48|
        STR      r4,[r3,#8]
        B        |L1.50|
|L1.48|
        STR      r4,[r3,#0x28]
|L1.50|
        MOVS     r0,#0
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.FMC_NAND_DeInit||, CODE, READONLY, ALIGN=1

FMC_NAND_DeInit PROC
        MOV      r2,r0
        CMP      r1,#0x10
        BNE      |L2.16|
        LDR      r0,[r2,#0]
        BIC      r0,r0,#4
        STR      r0,[r2,#0]
        B        |L2.24|
|L2.16|
        LDR      r0,[r2,#0x20]
        BIC      r0,r0,#4
        STR      r0,[r2,#0x20]
|L2.24|
        CMP      r1,#0x10
        BNE      |L2.46|
        MOVS     r0,#0x18
        STR      r0,[r2,#0]
        MOVS     r0,#0x40
        STR      r0,[r2,#4]
        MOV      r0,#0xfcfcfcfc
        STR      r0,[r2,#8]
        STR      r0,[r2,#0xc]
        B        |L2.62|
|L2.46|
        MOVS     r0,#0x18
        STR      r0,[r2,#0x20]
        MOVS     r0,#0x40
        STR      r0,[r2,#0x24]
        MOV      r0,#0xfcfcfcfc
        STR      r0,[r2,#0x28]
        STR      r0,[r2,#0x2c]
|L2.62|
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.FMC_NAND_ECC_Disable||, CODE, READONLY, ALIGN=1

FMC_NAND_ECC_Disable PROC
        MOV      r2,r0
        CMP      r1,#0x10
        BNE      |L3.16|
        LDR      r0,[r2,#0]
        BIC      r0,r0,#0x40
        STR      r0,[r2,#0]
        B        |L3.24|
|L3.16|
        LDR      r0,[r2,#0x20]
        BIC      r0,r0,#0x40
        STR      r0,[r2,#0x20]
|L3.24|
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.FMC_NAND_ECC_Enable||, CODE, READONLY, ALIGN=1

FMC_NAND_ECC_Enable PROC
        MOV      r2,r0
        CMP      r1,#0x10
        BNE      |L4.16|
        LDR      r0,[r2,#0]
        ORR      r0,r0,#0x40
        STR      r0,[r2,#0]
        B        |L4.24|
|L4.16|
        LDR      r0,[r2,#0x20]
        ORR      r0,r0,#0x40
        STR      r0,[r2,#0x20]
|L4.24|
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.FMC_NAND_GetECC||, CODE, READONLY, ALIGN=1

FMC_NAND_GetECC PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r7,r2
        MOV      r5,r3
        MOV      r8,#0
        BL       HAL_GetTick
        MOV      r8,r0
        B        |L5.48|
|L5.24|
        ADDS     r0,r5,#1
        CBZ      r0,|L5.48|
        CBZ      r5,|L5.42|
        BL       HAL_GetTick
        SUB      r0,r0,r8
        CMP      r0,r5
        BLS      |L5.48|
|L5.42|
        MOVS     r0,#3
|L5.44|
        POP      {r4-r8,pc}
|L5.48|
        CMP      r7,#0x10
        BNE      |L5.60|
        LDR      r0,[r4,#4]
        UBFX     r0,r0,#6,#1
        B        |L5.66|
|L5.60|
        LDR      r0,[r4,#0x24]
        UBFX     r0,r0,#6,#1
|L5.66|
        CMP      r0,#0
        BEQ      |L5.24|
        CMP      r7,#0x10
        BNE      |L5.80|
        LDR      r0,[r4,#0x14]
        STR      r0,[r6,#0]
        B        |L5.84|
|L5.80|
        LDR      r0,[r4,#0x34]
        STR      r0,[r6,#0]
|L5.84|
        MOVS     r0,#0
        B        |L5.44|
        ENDP


        AREA ||i.FMC_NAND_Init||, CODE, READONLY, ALIGN=2

FMC_NAND_Init PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        MOVS     r3,#0
        LDR      r0,[r1,#0]
        CMP      r0,#0x10
        BNE      |L6.16|
        LDR      r3,[r2,#0]
        B        |L6.18|
|L6.16|
        LDR      r3,[r2,#0x20]
|L6.18|
        LDR      r0,|L6.72|
        ANDS     r3,r3,r0
        LDR      r0,[r1,#4]
        ORR      r0,r0,#8
        LDR      r4,[r1,#8]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0xc]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0x10]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0x14]
        ORR      r0,r0,r4,LSL #9
        LDR      r4,[r1,#0x18]
        ORR      r0,r0,r4,LSL #13
        ORRS     r3,r3,r0
        LDR      r0,[r1,#0]
        CMP      r0,#0x10
        BNE      |L6.64|
        STR      r3,[r2,#0]
        B        |L6.66|
|L6.64|
        STR      r3,[r2,#0x20]
|L6.66|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L6.72|
        DCD      0xfff00181

        AREA ||i.FMC_NORSRAM_DeInit||, CODE, READONLY, ALIGN=1

FMC_NORSRAM_DeInit PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        LDR      r0,[r3,r2,LSL #2]
        BIC      r0,r0,#1
        STR      r0,[r3,r2,LSL #2]
        CBNZ     r2,|L7.28|
        MOV      r0,#0x30db
        STR      r0,[r3,r2,LSL #2]
        B        |L7.36|
|L7.28|
        MOV      r0,#0x30d2
        STR      r0,[r3,r2,LSL #2]
|L7.36|
        MVN      r4,#0xf0000000
        ADDS     r0,r2,#1
        STR      r4,[r3,r0,LSL #2]
        MOV      r0,r4
        STR      r0,[r1,r2,LSL #2]
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.FMC_NORSRAM_Extended_Timing_Init||, CODE, READONLY, ALIGN=2

FMC_NORSRAM_Extended_Timing_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r3
        MOVS     r3,#0
        CMP      r5,#0x4000
        BNE      |L8.54|
        LDR      r3,[r4,r2,LSL #2]
        LDR      r0,|L8.68|
        ANDS     r3,r3,r0
        LDRD     r0,r6,[r1,#0]
        ORR      r0,r0,r6,LSL #4
        LDR      r6,[r1,#8]
        ORR      r0,r0,r6,LSL #8
        LDRH     r6,[r1,#0xc]
        ORR      r0,r0,r6,LSL #16
        LDR      r6,[r1,#0x18]
        ORRS     r0,r0,r6
        ORRS     r3,r3,r0
        STR      r3,[r4,r2,LSL #2]
        B        |L8.62|
|L8.54|
        MVN      r0,#0xf0000000
        STR      r0,[r4,r2,LSL #2]
|L8.62|
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L8.68|
        DCD      0xcff00000

        AREA ||i.FMC_NORSRAM_Init||, CODE, READONLY, ALIGN=2

FMC_NORSRAM_Init PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        MOVS     r3,#0
        LDR      r0,[r1,#0]
        LDR      r3,[r2,r0,LSL #2]
        LDR      r0,|L9.112|
        ANDS     r3,r3,r0
        LDRD     r0,r4,[r1,#4]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0xc]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0x10]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0x14]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0x18]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0x1c]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0x20]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0x24]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0x28]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0x2c]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0x3c]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0x30]
        ORRS     r0,r0,r4
        LDR      r4,[r1,#0x34]
        ORRS     r0,r0,r4
        ORRS     r3,r3,r0
        LDR      r0,[r1,#8]
        CMP      r0,#8
        BNE      |L9.82|
        ORR      r3,r3,#0x40
|L9.82|
        LDR      r0,[r1,#0]
        STR      r3,[r2,r0,LSL #2]
        LDR      r0,[r1,#0x34]
        CMP      r0,#0x100000
        BNE      |L9.108|
        LDR      r0,[r1,#0]
        CBZ      r0,|L9.108|
        LDR      r0,[r2,#0]
        LDR      r4,[r1,#0x34]
        ORRS     r0,r0,r4
        STR      r0,[r2,#0]
|L9.108|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP

|L9.112|
        DCD      0xffe00080

        AREA ||i.FMC_NORSRAM_Timing_Init||, CODE, READONLY, ALIGN=1

FMC_NORSRAM_Timing_Init PROC
        PUSH     {r4,r5,lr}
        MOV      r3,r0
        MOV      r4,r2
        MOVS     r2,#0
        ADDS     r0,r4,#1
        LDR      r2,[r3,r0,LSL #2]
        AND      r2,r2,#0xc0000000
        LDRD     r0,r5,[r1,#0]
        ORR      r0,r0,r5,LSL #4
        LDR      r5,[r1,#8]
        ORR      r0,r0,r5,LSL #8
        LDRH     r5,[r1,#0xc]
        ORR      r5,r0,r5,LSL #16
        LDRH     r0,[r1,#0x10]
        SUBS     r0,r0,#1
        ORR      r5,r5,r0,LSL #20
        LDRB     r0,[r1,#0x14]
        SUBS     r0,r0,#2
        ORR      r0,r5,r0,LSL #24
        LDR      r5,[r1,#0x18]
        ORRS     r0,r0,r5
        ORRS     r2,r2,r0
        ADDS     r0,r4,#1
        STR      r2,[r3,r0,LSL #2]
        LDR      r0,[r3,#0]
        AND      r0,r0,#0x100000
        CBZ      r0,|L10.90|
        LDR      r0,[r3,#4]
        BIC      r2,r0,#0xf00000
        LDRH     r0,[r1,#0x10]
        SUBS     r0,r0,#1
        ORR      r2,r2,r0,LSL #20
        STR      r2,[r3,#4]
|L10.90|
        MOVS     r0,#0
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.FMC_NORSRAM_WriteOperation_Disable||, CODE, READONLY, ALIGN=1

FMC_NORSRAM_WriteOperation_Disable PROC
        MOV      r2,r0
        LDR      r0,[r2,r1,LSL #2]
        BIC      r0,r0,#0x1000
        STR      r0,[r2,r1,LSL #2]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.FMC_NORSRAM_WriteOperation_Enable||, CODE, READONLY, ALIGN=1

FMC_NORSRAM_WriteOperation_Enable PROC
        MOV      r2,r0
        LDR      r0,[r2,r1,LSL #2]
        ORR      r0,r0,#0x1000
        STR      r0,[r2,r1,LSL #2]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.FMC_PCCARD_AttributeSpace_Timing_Init||, CODE, READONLY, ALIGN=1

FMC_PCCARD_AttributeSpace_Timing_Init PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        MOVS     r3,#0
        LDR      r3,[r2,#0xc]
        MOVS     r3,#0
        LDRD     r0,r4,[r1,#0]
        ORR      r0,r0,r4,LSL #8
        LDRH     r4,[r1,#8]
        ORR      r0,r0,r4,LSL #16
        LDRB     r4,[r1,#0xc]
        ORR      r0,r0,r4,LSL #24
        ORRS     r3,r3,r0
        STR      r3,[r2,#0xc]
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.FMC_PCCARD_CommonSpace_Timing_Init||, CODE, READONLY, ALIGN=1

FMC_PCCARD_CommonSpace_Timing_Init PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        MOVS     r3,#0
        LDR      r3,[r2,#8]
        MOVS     r3,#0
        LDRD     r0,r4,[r1,#0]
        ORR      r0,r0,r4,LSL #8
        LDRH     r4,[r1,#8]
        ORR      r0,r0,r4,LSL #16
        LDRB     r4,[r1,#0xc]
        ORR      r0,r0,r4,LSL #24
        ORRS     r3,r3,r0
        STR      r3,[r2,#8]
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.FMC_PCCARD_DeInit||, CODE, READONLY, ALIGN=1

FMC_PCCARD_DeInit PROC
        MOV      r1,r0
        LDR      r0,[r1,#0]
        BIC      r0,r0,#4
        STR      r0,[r1,#0]
        MOVS     r0,#0x18
        STR      r0,[r1,#0]
        MOVS     r0,#0
        STR      r0,[r1,#4]
        MOV      r0,#0xfcfcfcfc
        STR      r0,[r1,#8]
        STR      r0,[r1,#0xc]
        STR      r0,[r1,#0x10]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.FMC_PCCARD_IOSpace_Timing_Init||, CODE, READONLY, ALIGN=1

FMC_PCCARD_IOSpace_Timing_Init PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        MOVS     r3,#0
        LDR      r3,[r2,#0x10]
        MOVS     r3,#0
        LDRD     r0,r4,[r1,#0]
        ORR      r0,r0,r4,LSL #8
        LDRH     r4,[r1,#8]
        ORR      r0,r0,r4,LSL #16
        LDRB     r4,[r1,#0xc]
        ORR      r0,r0,r4,LSL #24
        ORRS     r3,r3,r0
        STR      r3,[r2,#0x10]
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.FMC_PCCARD_Init||, CODE, READONLY, ALIGN=2

FMC_PCCARD_Init PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        MOVS     r3,#0
        LDR      r3,[r2,#0]
        LDR      r0,|L17.40|
        ANDS     r3,r3,r0
        LDR      r0,[r1,#0]
        ORR      r0,r0,#0x10
        LDR      r4,[r1,#4]
        ORR      r0,r0,r4,LSL #9
        LDR      r4,[r1,#8]
        ORR      r0,r0,r4,LSL #13
        ORRS     r3,r3,r0
        STR      r3,[r2,#0]
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L17.40|
        DCD      0xfffe01c5

        AREA ||i.FMC_SDRAM_DeInit||, CODE, READONLY, ALIGN=1

FMC_SDRAM_DeInit PROC
        MOV      r2,r0
        MOV      r0,#0x2d0
        STR      r0,[r2,r1,LSL #2]
        MVN      r3,#0xf0000000
        ADD      r0,r2,#8
        STR      r3,[r0,r1,LSL #2]
        MOVS     r0,#0
        STR      r0,[r2,#0x10]
        STR      r0,[r2,#0x14]
        STR      r0,[r2,#0x18]
        BX       lr
        ENDP


        AREA ||i.FMC_SDRAM_GetModeStatus||, CODE, READONLY, ALIGN=1

FMC_SDRAM_GetModeStatus PROC
        MOV      r2,r0
        MOVS     r0,#0
        CBNZ     r1,|L19.14|
        LDR      r3,[r2,#0x18]
        AND      r0,r3,#6
        B        |L19.22|
|L19.14|
        LDR      r3,[r2,#0x18]
        AND      r3,r3,#0x18
        LSRS     r0,r3,#2
|L19.22|
        BX       lr
        ENDP


        AREA ||i.FMC_SDRAM_Init||, CODE, READONLY, ALIGN=1

FMC_SDRAM_Init PROC
        PUSH     {r4,r5,lr}
        MOV      r2,r0
        MOVS     r3,#0
        MOVS     r4,#0
        LDR      r0,[r1,#0]
        CMP      r0,#1
        BEQ      |L20.60|
        LDR      r3,[r2,#0]
        BFC      r3,#0,#15
        LDRD     r0,r5,[r1,#4]
        ORRS     r0,r0,r5
        LDR      r5,[r1,#0xc]
        ORRS     r0,r0,r5
        LDR      r5,[r1,#0x10]
        ORRS     r0,r0,r5
        LDR      r5,[r1,#0x14]
        ORRS     r0,r0,r5
        LDR      r5,[r1,#0x18]
        ORRS     r0,r0,r5
        LDR      r5,[r1,#0x1c]
        ORRS     r0,r0,r5
        LDR      r5,[r1,#0x20]
        ORRS     r0,r0,r5
        LDR      r5,[r1,#0x24]
        ORRS     r0,r0,r5
        ORRS     r3,r3,r0
        STR      r3,[r2,#0]
        B        |L20.112|
|L20.60|
        LDR      r3,[r2,#0]
        BIC      r3,r3,#0x7c00
        LDRD     r0,r5,[r1,#0x1c]
        ORRS     r0,r0,r5
        LDR      r5,[r1,#0x24]
        ORRS     r0,r0,r5
        ORRS     r3,r3,r0
        LDR      r4,[r2,#4]
        BFC      r4,#0,#15
        LDRD     r0,r5,[r1,#4]
        ORRS     r0,r0,r5
        LDR      r5,[r1,#0xc]
        ORRS     r0,r0,r5
        LDR      r5,[r1,#0x10]
        ORRS     r0,r0,r5
        LDR      r5,[r1,#0x14]
        ORRS     r0,r0,r5
        LDR      r5,[r1,#0x18]
        ORRS     r0,r0,r5
        ORRS     r4,r4,r0
        STR      r3,[r2,#0]
        STR      r4,[r2,#4]
|L20.112|
        MOVS     r0,#0
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.FMC_SDRAM_ProgramRefreshRate||, CODE, READONLY, ALIGN=1

FMC_SDRAM_ProgramRefreshRate PROC
        MOV      r2,r0
        LDR      r0,[r2,#0x14]
        ORR      r0,r0,r1,LSL #1
        STR      r0,[r2,#0x14]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.FMC_SDRAM_SendCommand||, CODE, READONLY, ALIGN=1

FMC_SDRAM_SendCommand PROC
        PUSH     {r3-r7,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        MOVS     r0,#0
        STR      r0,[sp,#0]
        MOVS     r7,#0
        LDRD     r0,r1,[r4,#0]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#8]
        SUBS     r1,r1,#1
        ORR      r0,r0,r1,LSL #5
        LDR      r1,[r4,#0xc]
        ORR      r0,r0,r1,LSL #9
        STR      r0,[sp,#0]
        LDR      r0,[sp,#0]
        STR      r0,[r6,#0x10]
        BL       HAL_GetTick
        MOV      r7,r0
        B        |L22.68|
|L22.48|
        ADDS     r0,r5,#1
        CBZ      r0,|L22.68|
        CBZ      r5,|L22.64|
        BL       HAL_GetTick
        SUBS     r0,r0,r7
        CMP      r0,r5
        BLS      |L22.68|
|L22.64|
        MOVS     r0,#3
|L22.66|
        POP      {r3-r7,pc}
|L22.68|
        LDR      r0,[r6,#0x18]
        AND      r0,r0,#0x20
        CMP      r0,#0
        BNE      |L22.48|
        NOP      
        B        |L22.66|
        ENDP


        AREA ||i.FMC_SDRAM_SetAutoRefreshNumber||, CODE, READONLY, ALIGN=1

FMC_SDRAM_SetAutoRefreshNumber PROC
        MOV      r2,r0
        LDR      r0,[r2,#0x10]
        ORR      r0,r0,r1,LSL #5
        STR      r0,[r2,#0x10]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.FMC_SDRAM_Timing_Init||, CODE, READONLY, ALIGN=2

FMC_SDRAM_Timing_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r3,r0
        MOV      r5,r2
        MOVS     r2,#0
        MOVS     r4,#0
        CMP      r5,#1
        BEQ      |L24.78|
        LDR      r2,[r3,#8]
        AND      r2,r2,#0xf0000000
        LDR      r0,[r1,#0]
        SUBS     r0,r0,#1
        LDR      r6,[r1,#4]
        SUBS     r6,r6,#1
        ORR      r6,r0,r6,LSL #4
        LDR      r0,[r1,#8]
        SUBS     r0,r0,#1
        ORR      r6,r6,r0,LSL #8
        LDR      r0,[r1,#0xc]
        SUBS     r0,r0,#1
        ORR      r6,r6,r0,LSL #12
        LDRH     r0,[r1,#0x10]
        SUBS     r0,r0,#1
        ORR      r6,r6,r0,LSL #16
        LDRH     r0,[r1,#0x14]
        SUBS     r0,r0,#1
        ORR      r6,r6,r0,LSL #20
        LDRB     r0,[r1,#0x18]
        SUBS     r0,r0,#1
        ORR      r0,r6,r0,LSL #24
        ORRS     r2,r2,r0
        STR      r2,[r3,#8]
        B        |L24.148|
|L24.78|
        LDR      r2,[r3,#8]
        LDR      r0,|L24.152|
        ANDS     r2,r2,r0
        LDR      r0,[r1,#0xc]
        SUBS     r0,r0,#1
        LSLS     r6,r0,#12
        LDRH     r0,[r1,#0x14]
        SUBS     r0,r0,#1
        ORR      r0,r6,r0,LSL #20
        ORRS     r2,r2,r0
        LDR      r4,[r3,#0xc]
        AND      r4,r4,#0xf0000000
        LDR      r0,[r1,#0]
        SUBS     r0,r0,#1
        LDR      r6,[r1,#4]
        SUBS     r6,r6,#1
        ORR      r6,r0,r6,LSL #4
        LDR      r0,[r1,#8]
        SUBS     r0,r0,#1
        ORR      r6,r6,r0,LSL #8
        LDRH     r0,[r1,#0x10]
        SUBS     r0,r0,#1
        ORR      r6,r6,r0,LSL #16
        LDRB     r0,[r1,#0x18]
        SUBS     r0,r0,#1
        ORR      r0,r6,r0,LSL #24
        ORRS     r4,r4,r0
        STR      r2,[r3,#8]
        STR      r4,[r3,#0xc]
|L24.148|
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP

|L24.152|
        DCD      0xff0f0fff

        AREA ||i.FMC_SDRAM_WriteProtection_Disable||, CODE, READONLY, ALIGN=1

FMC_SDRAM_WriteProtection_Disable PROC
        MOV      r2,r0
        LDR      r0,[r2,r1,LSL #2]
        BIC      r0,r0,#0x200
        STR      r0,[r2,r1,LSL #2]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.FMC_SDRAM_WriteProtection_Enable||, CODE, READONLY, ALIGN=1

FMC_SDRAM_WriteProtection_Enable PROC
        MOV      r2,r0
        LDR      r0,[r2,r1,LSL #2]
        ORR      r0,r0,#0x200
        STR      r0,[r2,r1,LSL #2]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\Libraries\\STM32F4xx_HAL_Driver\\Src\\stm32f4xx_ll_fmc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f4xx_ll_fmc_c_65a710dd____REV16|
#line 388 "..\\Libraries\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_stm32f4xx_ll_fmc_c_65a710dd____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f4xx_ll_fmc_c_65a710dd____REVSH|
#line 402
|__asm___18_stm32f4xx_ll_fmc_c_65a710dd____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f4xx_ll_fmc_c_65a710dd____RRX|
#line 587
|__asm___18_stm32f4xx_ll_fmc_c_65a710dd____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT FMC_NAND_AttributeSpace_Timing_Init [CODE]
        EXPORT FMC_NAND_CommonSpace_Timing_Init [CODE]
        EXPORT FMC_NAND_DeInit [CODE]
        EXPORT FMC_NAND_ECC_Disable [CODE]
        EXPORT FMC_NAND_ECC_Enable [CODE]
        EXPORT FMC_NAND_GetECC [CODE]
        EXPORT FMC_NAND_Init [CODE]
        EXPORT FMC_NORSRAM_DeInit [CODE]
        EXPORT FMC_NORSRAM_Extended_Timing_Init [CODE]
        EXPORT FMC_NORSRAM_Init [CODE]
        EXPORT FMC_NORSRAM_Timing_Init [CODE]
        EXPORT FMC_NORSRAM_WriteOperation_Disable [CODE]
        EXPORT FMC_NORSRAM_WriteOperation_Enable [CODE]
        EXPORT FMC_PCCARD_AttributeSpace_Timing_Init [CODE]
        EXPORT FMC_PCCARD_CommonSpace_Timing_Init [CODE]
        EXPORT FMC_PCCARD_DeInit [CODE]
        EXPORT FMC_PCCARD_IOSpace_Timing_Init [CODE]
        EXPORT FMC_PCCARD_Init [CODE]
        EXPORT FMC_SDRAM_DeInit [CODE]
        EXPORT FMC_SDRAM_GetModeStatus [CODE]
        EXPORT FMC_SDRAM_Init [CODE]
        EXPORT FMC_SDRAM_ProgramRefreshRate [CODE]
        EXPORT FMC_SDRAM_SendCommand [CODE]
        EXPORT FMC_SDRAM_SetAutoRefreshNumber [CODE]
        EXPORT FMC_SDRAM_Timing_Init [CODE]
        EXPORT FMC_SDRAM_WriteProtection_Disable [CODE]
        EXPORT FMC_SDRAM_WriteProtection_Enable [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_GetTick [CODE]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
